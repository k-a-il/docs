<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS SDKs on Docs</title><link>/user-guide/integrations/sdks/</link><description>Recent content in AWS SDKs on Docs</description><generator>Hugo</generator><language>en</language><atom:link href="/user-guide/integrations/sdks/index.xml" rel="self" type="application/rss+xml"/><item><title>.NET</title><link>/user-guide/integrations/sdks/dotnet/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/integrations/sdks/dotnet/</guid><description>Overview The AWS SDK for .NET, like other AWS SDKs, lets you set the endpoint when creating resource clients, which is the preferred way of integrating the .NET SDK with LocalStack.
Example Here is an example of how to create an LambdaClient with the endpoint set to LocalStack.
var lambdaClient = new AmazonLambdaClient(new AmazonLambdaConfig( { ServiceURL = &amp;#34;http://localhost:4566&amp;#34; } ); If you want to specify a region and credentials when creating the client, please set them as AuthenticationRegion and BasicAWSCredentials, like in this example:</description></item><item><title>C++</title><link>/user-guide/integrations/sdks/cpp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/integrations/sdks/cpp/</guid><description>Overview The AWS SDK for C++, like other AWS SDKs, lets you set the endpoint when creating resource clients, which is the preferred way of integrating the C++ SDK with LocalStack.
Example Consider the following example, which creates an SQS queue, sends a message to it, then receives the same message via the SDK:
#include &amp;lt;iostream&amp;gt; #include &amp;lt;aws/core/Aws.h&amp;gt; #include &amp;lt;aws/core/utils/logging/LogLevel.h&amp;gt; #include &amp;lt;aws/sqs/SQSClient.h&amp;gt; #include &amp;lt;aws/sqs/model/CreateQueueRequest.h&amp;gt; #include &amp;lt;aws/sqs/model/SendMessageRequest.h&amp;gt; #include &amp;lt;aws/sqs/model/ReceiveMessageRequest.h&amp;gt; #include &amp;lt;aws/sqs/model/DeleteMessageRequest.h&amp;gt; using namespace Aws; int main() { // initialize AWS SDK SDKOptions options; options.</description></item><item><title>Go</title><link>/user-guide/integrations/sdks/go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/integrations/sdks/go/</guid><description>Overview The AWS SDK for Go, like other AWS SDKs, lets you set the endpoint when creating resource clients, which is the preferred way of integrating the Go SDK with LocalStack.
The Go SDK has two major versions, each with their own way of specifying the LocalStack endpoint:
aws-sdk-go aws-sdk-go-v2 Examples Here is an example of how to create an S3 Client from a Session with the endpoint set to LocalStack.</description></item><item><title>Java</title><link>/user-guide/integrations/sdks/java/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/integrations/sdks/java/</guid><description>Overview The AWS SDK for Java provides a Java API for AWS services. Using the SDK, your Java application can interact with LocalStack services the same way it does with Amazon services. Support for new services is regularly added to the SDK. For a list of the supported services and their API versions that are included with each release of the SDK, view the release notes for the version that youâ€™re working with.</description></item><item><title>JavaScript</title><link>/user-guide/integrations/sdks/javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/integrations/sdks/javascript/</guid><description>Overview The AWS SDK for JavaScript, like other AWS SDKs, lets you set the endpoint when creating resource clients, which is the preferred way of integrating the JavaScript SDK with LocalStack.
The JavaScript SDK has two major versions, each with their own way of specifying the LocalStack endpoint:
aws-sdk-js aws-sdk-js-v3 Examples Here is an example of how to create a Lambda client and an S3 client with the endpoint set to LocalStack.</description></item><item><title>PHP</title><link>/user-guide/integrations/sdks/php/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/integrations/sdks/php/</guid><description>Overview The AWS SDK for PHP, like other AWS SDKs, lets you set the endpoint when creating resource clients, which is the preferred way of integrating the PHP SDK with LocalStack.
Example Here is an example of how to create an S3Client with the endpoint set to LocalStack.
use Aws\S3\S3Client; use Aws\Exception\AwsException; // Configuring S3 Client $s3 = new Aws\S3\S3Client([ &amp;#39;version&amp;#39; =&amp;gt; &amp;#39;2006-03-01&amp;#39;, &amp;#39;region&amp;#39; =&amp;gt; &amp;#39;us-east-1&amp;#39;, // Enable &amp;#39;use_path_style_endpoint&amp;#39; =&amp;gt; true, if bucket name is non DNS compliant &amp;#39;use_path_style_endpoint&amp;#39; =&amp;gt; true, &amp;#39;endpoint&amp;#39; =&amp;gt; &amp;#39;http://s3.</description></item><item><title>Python Boto3</title><link>/user-guide/integrations/sdks/python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/integrations/sdks/python/</guid><description>Boto3 is the Amazon Web Services (AWS) Software Development Kit (SDK) for Python, which allows Python developers to write software that makes use of AWS services.
You can easily create a boto3 client that interacts with your LocalStack instance. The example below creates a boto3 client that lists all available Lambda functions:
import boto3 endpoint_url = &amp;#34;http://localhost.localstack.cloud:4566&amp;#34; # alternatively, to use HTTPS endpoint on port 443: # endpoint_url = &amp;#34;https://localhost.localstack.cloud&amp;#34; def main(): client = boto3.</description></item><item><title>Ruby</title><link>/user-guide/integrations/sdks/ruby/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/integrations/sdks/ruby/</guid><description>Overview The AWS SDK for Ruby, like other AWS SDKs, lets you set the endpoint when creating resource clients, which is the preferred way of integrating the Ruby SDK with LocalStack.
Example Here is an example of how to create a S3 bucket with the AWS configuration endpoint set to LocalStack:
require &amp;#34;aws-sdk-s3&amp;#34; # Wraps Amazon S3 bucket actions. class BucketCreateWrapper attr_reader :bucket # @param bucket [Aws::S3::Bucket] An Amazon S3 bucket initialized with a name.</description></item></channel></rss>