<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>LocalStack Extensions on Docs</title><link>/user-guide/extensions/</link><description>Recent content in LocalStack Extensions on Docs</description><generator>Hugo</generator><language>en</language><atom:link href="/user-guide/extensions/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started</title><link>/user-guide/extensions/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/getting-started/</guid><description>Introduction MailHog is an open source email testing tool for developers. It provides a simple SMTP server and web interface that allows developers to easily catch and inspect emails sent from their application during development. In this guide, you will install and use the official MailHog extension for LocalStack and send an email through SES, while inspecting it in MailHog.
Prerequisites LocalStack Account AWS CLI Installation To get started, start your LocalStack instance with your LOCALSTACK_AUTH_TOKEN.</description></item><item><title>Managing extensions</title><link>/user-guide/extensions/managing-extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/managing-extensions/</guid><description>You have different options to install and manage your LocalStack extensions depending on your environment and work style.
Extensions are managed through the LocalStack container, but stored in the LocalStack volume on your host. The next time you start up LocalStack, your extensions will still be there!
Using the extensions manager in our App The easiest way to manage official extensions is through our webapp and our Extension Manager App. Simply install and remove extensions from your specific LocalStack instance directly from the App.</description></item><item><title>Developing extensions</title><link>/user-guide/extensions/developing-extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/developing-extensions/</guid><description>Introduction This section provides a brief overview of how to develop your own extensions.
Extensions API LocalStack exposes a Python API for building extensions that can be found in the core codebase in localstack.extensions.api.
The basic interface to implement is as follows:
class Extension(BaseExtension): &amp;#34;&amp;#34;&amp;#34; An extension that is loaded into LocalStack dynamically. The method execution order of an extension is as follows: - on_extension_load - on_platform_start - update_gateway_routes - update_request_handlers - update_response_handlers - on_platform_ready - on_platform_shutdown &amp;#34;&amp;#34;&amp;#34; namespace: str = &amp;#34;localstack.</description></item><item><title>Extensions Library</title><link>/user-guide/extensions/extensions-library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/extensions-library/</guid><description>Introduction LocalStack extensions allows you to extend and customize LocalStack. A LocalStack extension is a Python application that runs together with LocalStack within the LocalStack container.
LocalStack extensions are available to licensed users, and the list of available extensions can be found in the Extensions Library.
Installing an Extension To install an extension using the LocalStack Extensions Library, you can navigate to the app.localstack.cloud/extensions/library and click on the Go to Instance button to open the list of available instances.</description></item><item><title>Official Extensions</title><link>/user-guide/extensions/official-extensions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/extensions/official-extensions/</guid><description/></item></channel></rss>